#!/bin/bash
# 1. Initialises a new data environment
# 2. This script should be placed in the root of the AIRRMAP_DATA folder.
# USAGE (case sensitive): 
# ./envinit.sh <Env_Name>

# Environment list: http://opig.stats.ox.ac.uk/webapps/ngsdb/unpaired/

# Init
set -o errexit  # Exit the script if any statement returns a non-zero (typically an error, though not always)
set -o nounset  # Option Explicit. Treat any reference to a variable that's not set as an error
set -o pipefail  # If any element of pipeline fails, then pipeline as a whole fails.

main() {

    # Store vars
    OAS_BASE_URL=http://opig.stats.ox.ac.uk/webapps/ngsdb/unpaired/ENV_NAME/csv/
    OAS_FILE_PATTERN='.csv.gz'
    script_file_name=`basename "$0"`
    current_date=`date`
    oas_study_name="${1}"
    env_name="${2}"

    # Get download folder url
    # Substitute ENV_NAME with arg
    oas_folder="${OAS_BASE_URL/ENV_NAME/$oas_study_name}"

    # Create local folders
    env_folder="./${env_name}"
    mkdir -p "$env_folder"
    env_anchor_folder="${env_folder}/src/anchor"
    mkdir -p ${env_anchor_folder}
    env_seq_folder="${env_folder}/src/seq"
    mkdir -p ${env_seq_folder}

    # Copy in envconfig.yaml
    cp ./envconfig.yaml "${env_folder}/envconfig.yaml"

    #Â Double check folder was created
    if [[ ! -d "$env_seq_folder" ]]; then
      echo "Could not create folder, folder does not exist: '$env_seq_folder'"
      exit 1
    fi
          
    # curl: Read the web directory (-s is silent mode, stops stats at top)
    # grep: Filter lines for file links (e.g. .csv.gz)
    # sed: Get the href value
    # awk: Add surrounding text for download
    #   -v: allows awk to access the oas_folder variable
    #   curl -#: Progress
    #   curl -O -J: Saves locally using remote filename from the header
    #   curl -C - : Skips file if exists/resumes, but may contact server briefly for file size.
    #               Note single dash ' - ' for argument.
    #               REF: https://stackoverflow.com/questions/11856351/how-to-skip-already-existing-files-when-downloading-with-curl
    file_list=`curl -s ${oas_folder} | \
                grep ${OAS_FILE_PATTERN} | \
                sed -n 's/.*href="\([^"]*\).*/\1/p' | \
                awk -v oas_folder="$oas_folder" '{print "curl -# -O -J -C - "oas_folder$0}'`
    

    # Create OAS download script
    out_download_script="${env_folder}/oas_download.sh"
    echo "# Download script for ${env_name}, system generated by ${script_file_name} (${current_date})." > ${out_download_script}
    
    # Get line/file count
    file_count=`printf '%s\n' "$file_list" | wc -l`

    # CD into src/seq as curl doesn't support save to folder
    echo "cd ./src/seq" >> ${out_download_script}

    # Show how many files exist
    echo "echo '$file_count file(s) available. Existing files will be skipped (curl -C -).'" >> ${out_download_script}

    # Write list of files (curl lines)
    echo "$file_list" >> ${out_download_script}

    # Show finished.
    echo "echo 'Finished downloading $file_count file(s) to $env_seq_folder'" >> ${out_download_script}
 
    # Finalise
    chmod u+rx "${out_download_script}"
    echo "Successfully saved download script to '${out_download_script}'. Run to download sequence files."
  
}

main "${@}" # pass in all args to main. 